.app {
  min-height:            100vh;
  display:               grid;
  grid-template-columns: auto 1fr;
  grid-template-rows:    auto 1fr;
  grid-template-areas:   "navbar   navbar"
                         "main-nav content";
}

.container,
.container-fluid {
  .make-container();
}

.container {
  .make-container-max-widths();
}

.row {
  .make-row();
}

.grid-column {
  .make-col-ready();
}

.for-each(@pair in @grid-breakpoints)
{
  @size: at(@pair, 1);
  @px: at(@pair, 2);

  .for(@i: 1, @n: @grid-columns) {
    .col-@{size}-@{i} {
      &:extend(.grid-column);
    }
  }
  .col-@{size},
  .col-@{size}-auto {
    &:extend(.grid-column);
  }

  .col-@{size} {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }
  .col-@{size}-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }

  @media (min-width: @px) {
    .col-@{size} {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }
    .col-@{size}-auto {
      flex: 0 0 auto;
      width: auto;
      max-width: none;
    }

    .for(@i: 1, @n: @grid-columns) {
      .col-@{size}-@{i} {
        .make-col(@i, @grid-columns);
      }
    }
    .for(@i: 0, @n: @grid-columns) {
      .order-@{size}-@{i} {
        order: @i;
      }
    }
    .for(@i: 1, @n: @grid-columns - 1) {
      .offset-@{size}-@{i} {
        .make-col-offset(@i, @grid-columns);
      }
    }
  }
}
.for(@i: 1, @n: @grid-columns) {
  .col-@{i} {
    &:extend(.grid-column);
    .make-col(@i, @grid-columns);
  }
}